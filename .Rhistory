modF
summary(modF)
modF <- step(modelocontodo, trace = TRUE, direction = "backward")
modF
summary(modF)
modF <- step(modelocontodo, trace = TRUE, direction = "backward")
summary(modF)
modelocontodo <-lm(Price ~   . ,
data = datosp
datosp <- datos1 <- datos[-outliers, ]
datosp <- datos1 <- datos[-outliers, ]
summary(modF)
set.seed(541)
sample <- sample.int(n = nrow(datosp), size = floor(0.80*nrow(datosp)), replace = F)
train <- datosp[sample, ]
test <- datosp[-sample, ]
View(test)
modelotesting <- lm(formula = ., = test)
modelotesting <- lm(formula = . = test)
modelotesting <- lm(formula = ., data = test)
modelotesting <- lm(formula = Price ~ . , data = test)
prediccion <- predict.lm(modelotesting, data = test[, c("gear","carb")])
summary(prediccion)
plot(test$mpg,prediccion)
plot(test$Price,prediccion)
prediccion <- predict.lm(modelotesting, data = test[, c(.,)])
plot(test$Price,prediccion)
prediccion <- predict.lm(modelotesting, data = test[, c(.,)])
modelotesting <- lm(formula = Price ~ . , data = test)
prediccion <- predict.lm(modelotesting, data = test[, c(.,)])
prediccion
plot(test$Price,prediccion)
prediccion <- predict.lm(modelotesting, data = test
summary(prediccion)
summary(prediccion)
plot(test$Price,prediccion)
test <- datosp[-sample, ]
modelotesting <- lm(formula = Price ~ . , data = test)
prediccion <- predict.lm(modelotesting, data = test
prediccion <- predict.lm(modelotesting, data = test
prediccion <- predict.lm(modelotesting, data = test)
plot(test$Price,prediccion)
metricas
library(Metrics)
metricas <- c(mae(test$Price,prediccion),
mape(test$Price, prediccion),
mse(test$Price, prediccion),
rmse(test$Price, prediccion),
AIC(modelotesting),
BIC(modelotesting),
summary(modelotesting)$r.squared)
names(metricas) <- c("MAE","MAPE","MSE","RMSE","AIC","BIC","R2")
metricas
## Conclusiones Finales del modelo
View(datos)
datos <- read.csv("datos.csv")
datos2 <- read.csv("datos2.csv")
datos <- subset(datos, select = -Model)
datos2 <- subset(datos2, select = -Model)
datos2$Brand <- as.factor(datos2$Brand)
datos2$Graphics<- as.factor(datos2$Graphics)
datos2$Operating<- as.factor(datos2$Operating)
datos2$Processor <- as.factor(datos2$Processor)
datos2$Storage <- as.factor(datos2$Storage)
datos2$Warranty <- as.factor(datos2$Warranty)
datos2$RAM <- as.factor(datos2$RAM)
var_cuanti.2 <- subset(datos2,
select = c("Price","RAM", "Storage", "Graphics"))
var_cuanti.2 <- subset(datos2,
select = c("Price","RAM", "Storage", "Graphics","Processor"))
Modelo.2 <- lm(Price ~  RAM + Storage +  Graphics + Processor ,
data = var_cuanti)
Modelo.2 <- lm(Price ~  RAM + Storage +  Graphics + Processor ,
data = var_cuanti.2)
summary(modelo.2)
summary(Modelo.2)
library(car)
vif(Modelo.2)
outliers <- c(14, 106, 192, 280, 518, 549, 634, 874, 907, 934,
950, 1109, 1128, 1130, 1171, 1221, 1222, 1317,
1335, 1380, 1405, 1449, 1466, 1631, 1682, 1792,
1827, 1921, 2000, 2103, 2141, 2169, 2343, 2349,
2371, 2451, 2477, 2541, 2543, 2577, 2626, 2632,
2652, 2657, 2713)
datos1 <- var_cuanti.2[-outliers, ]
datos2 <- var_cuanti.2[-outliers, ]
datos3 <- var_cuanti.2[-outliers, ]
summary(Modelo2.0)
Modelo2.0 <- lm(Price ~  RAM + Storage +  Graphics + Processor,
data = datos3)
summary(Modelo2.0)
datos3$Residuales<- rstandard(Modelo1.0)
shapiro.test(Modelo2.0$residuals)
library(lmtest)
bptest(Modelo2.0)
bgtest(Modelo2.0)
dwtest(Modelo2.0)
modF <- step(Modelo2.0, trace = TRUE, direction = "backward")
modF2 <- step(Modelo2.0, trace = TRUE, direction = "backward")
summary(modF2)
set.seed(541)
sample2 <- sample.int(n = nrow(datos3), size = floor(0.80*nrow(datos3)), replace = F)
train2 <- datos3[sample, ]
test2 <- datos3[-sample, ]
modelotesting2 <- lm(formula = Price ~ . , data = test)
prediccion2 <- predict.lm(modelotesting, data = test)
set.seed(541)
sample2 <- sample.int(n = nrow(datos3), size = floor(0.80*nrow(datos3)), replace = F)
train2 <- datos3[sample, ]
test2 <- datos3[-sample, ]
modelotesting2 <- lm(formula = Price ~ . , data = test)
prediccion2 <- predict.lm(modelotesting, data = test)
metricas2 <- c(mae(test$Price,prediccion2),
mape(test$Price, prediccion2),
mse(test$Price, prediccion2),
rmse(test$Price, prediccion2),
AIC(modelotesting2),
BIC(modelotesting2),
summary(modelotesting2)$r.squared)
library(Metrics)
metricas2 <- c(mae(test$Price,prediccion2),
mape(test$Price, prediccion2),
mse(test$Price, prediccion2),
rmse(test$Price, prediccion2),
AIC(modelotesting2),
BIC(modelotesting2),
summary(modelotesting2)$r.squared)
names(metricas2) <- c("MAE","MAPE","MSE","RMSE","AIC","BIC","R2")
metricas2
set.seed(541)
sample2 <- sample.int(n = nrow(var_cuanti.2), size = floor(0.80*nrow(var_cuanti.2)), replace = F)
train2 <- var_cuanti.2[sample, ]
test2 <- var_cuanti.2[-sample, ]
modelotesting2 <- lm(formula = Price ~ . , data = test)
prediccion2 <- predict.lm(modelotesting, data = test)
library(Metrics)
metricas2 <- c(mae(test$Price,prediccion2),
mape(test$Price, prediccion2),
mse(test$Price, prediccion2),
rmse(test$Price, prediccion2),
AIC(modelotesting2),
BIC(modelotesting2),
summary(modelotesting2)$r.squared)
names(metricas2) <- c("MAE","MAPE","MSE","RMSE","AIC","BIC","R2")
metricas2
datos3 <- read.csv("datos3.csv")
datos3 <- subset(datos3, select = -Model)
datos3$Brand <- as.factor(datos3$Brand)
datos3$Graphics<- as.factor(datos3$Graphics)
datos3$Operating<- as.factor(datos3$Operating)
datos3$Processor <- as.factor(datos3$Processor)
datos3$Storage <- as.factor(datos3$Storage)
datos3$Warranty <- as.factor(datos3$Warranty)
datos3$RAM <- as.factor(datos3$RAM)
datos3$Screen <- as.factor(datos3$Screen)
var_cuanti.3 <- subset(datos3,
select = c("Weight","Screen", "Battery", "Brand","Warranty", "Price"))
datos3$Brand <- as.factor(datos3$Brand)
datos3$Graphics<- as.factor(datos3$Graphics)
datos3$Operating<- as.factor(datos3$Operating)
datos3$Processor <- as.factor(datos3$Processor)
datos3$Storage <- as.factor(datos3$Storage)
datos3$Warranty <- as.factor(datos3$Warranty)
datos3$RAM <- as.factor(datos3$RAM)
datos3$Screen <- as.factor(datos3$Screen)
View(datos3)
var_cuanti.3 <- subset(datos3,
select = c("Weight","Screen", "Battery", "Brand","Warranty", "Price")
var_cuanti.3 <- subset(datos3,
View(var_cuanti)
View(var_cuanti.2)
View(var_cuanti.3)
var_cuanti.3 <- subset(datos3,
select = c("Weight","Screen", "Battery", "Brand","Warranty", "Price"))
datos3$Brand <- as.factor(datos3$Brand)
datos3$Graphics<- as.factor(datos3$Graphics)
datos3$Operating<- as.factor(datos3$Operating)
datos3$Processor <- as.factor(datos3$Processor)
datos3$Storage <- as.factor(datos3$Storage)
datos3$Warranty <- as.factor(datos3$Warranty)
datos3$RAM <- as.factor(datos3$RAM)
datos3$Screen <- as.factor(datos3$Screen)
var_cuanti.3 <- subset(datos3,
select = c("Weight","Screen", "Battery", "Brand","Warranty", "Price"))
datos$Brand <- as.factor(datos$Brand)
datos$Graphics<- as.factor(datos$Graphics)
datos$Operating<- as.factor(datos$Operating)
datos$Processor <- as.factor(datos$Processor)
datos$Storage <- as.factor(datos$Storage)
datos$Warranty <- as.factor(datos$Warranty)
datos$RAM <- as.factor(datos$RAM)
var_cuanti <- subset(datos,
select = c("Price","Weight", "Battery", "Screen"))
datos2$Brand <- as.factor(datos2$Brand)
datos2$Brand <- as.factor(datos2$Brand)
datos2$Brand <- as.factor(datos2$Brand)
datos <- read.csv("datos.csv")
datos2 <- read.csv("datos2.csv")
datos <- subset(datos, select = -Model)
datos2 <- subset(datos2, select = -Model)
datos3 <- read.csv("datos3.csv")
datos3 <- subset(datos3, select = -Model)
```
datos <- read.csv("datos.csv")
datos2 <- read.csv("datos2.csv")
datos <- subset(datos, select = -Model)
datos2 <- subset(datos2, select = -Model)
datos3 <- read.csv("datos3.csv")
datos <- read.csv("datos.csv")
datos2 <- read.csv("datos2.csv")
datos <- subset(datos, select = -Model)
datos2 <- subset(datos2, select = -Model)
datos3 <- read.csv("datos3.csv")
datos <- read.csv("datos.csv")
datos2 <- read.csv("datos2.csv")
datos <- subset(datos, select = -Model)
datos2 <- subset(datos2, select = -Model)
datos3 <- read.csv("datos3.csv")
datos$Brand <- as.factor(datos$Brand)
datos$Graphics<- as.factor(datos$Graphics)
datos$Operating<- as.factor(datos$Operating)
datos$Processor <- as.factor(datos$Processor)
datos$Storage <- as.factor(datos$Storage)
datos$Warranty <- as.factor(datos$Warranty)
datos$RAM <- as.factor(datos$RAM)
datos3$Brand <- as.factor(datos3$Brand)
datos3$Graphics<- as.factor(datos3$Graphics)
datos3$Operating<- as.factor(datos3$Operating)
datos3$Processor <- as.factor(datos3$Processor)
datos3$Storage <- as.factor(datos3$Storage)
datos3$Warranty <- as.factor(datos3$Warranty)
datos3$RAM <- as.factor(datos3$RAM)
datos3$Screen <- as.factor(datos3$Screen)
```
datos3 <- read.csv("datos3.csv")
datos3$Brand <- as.factor(datos3$Brand)
datos3$Graphics<- as.factor(datos3$Graphics)
datos3$Operating<- as.factor(datos3$Operating)
datos3$Processor <- as.factor(datos3$Processor)
datos3$Storage <- as.factor(datos3$Storage)
datos3$Warranty <- as.factor(datos3$Warranty)
datos3$RAM <- as.factor(datos3$RAM)
datos3$Screen <- as.factor(datos3$Screen)
datos$Brand <- as.factor(datos$Brand)
datos$Graphics<- as.factor(datos$Graphics)
datos$Operating<- as.factor(datos$Operating)
datos$Processor <- as.factor(datos$Processor)
datos$Storage <- as.factor(datos$Storage)
datos$Warranty <- as.factor(datos$Warranty)
datos$RAM <- as.factor(datos$RAM)
```{r}
var_cuanti.3 <- subset(datos3,
select = c("Weight","Screen", "Battery", "Brand","Warranty", "Price"))
datos3$Brand <- as.factor(datos3$Brand)
datos3$Graphics<- as.factor(datos3$Graphics)
datos3$Operating<- as.factor(datos3$Operating)
datos3$Processor <- as.factor(datos3$Processor)
datos3$Storage <- as.factor(datos3$Storage)
datos3$Warranty <- as.factor(datos3$Warranty)
datos3$RAM <- as.factor(datos3$RAM)
datos3$Screen <- as.factor(datos3$Screen)
sum(is.na(datos3$Brand))
unique(datos3$Brand)
datos3$Brand[is.na(datos3$Brand)] <- "Unknown"  # Reemplaza los valores faltantes
datos3$Brand <- as.factor(datos3$Brand)
datos3$Brand <- as.factor(datos3$Brand)
datos3$Brand <- as.factor(datos3$Brand)
datos3$Graphics<- as.factor(datos3$Graphics)
datos3$Operating<- as.factor(datos3$Operating)
datos3$Processor <- as.factor(datos3$Processor)
datos3$Storage <- as.factor(datos3$Storage)
datos3$Warranty <- as.factor(datos3$Warranty)
datos3$RAM <- as.factor(datos3$RAM)
datos3$Screen <- as.factor(datos3$Screen)
var_cuanti.3 <- subset(datos3,
select = c("Weight","Screen", "Battery", "Brand","Warranty", "Price"))
str(datos3$Brand)
anyDuplicated(datos3$Brand)
datos3$Brand <- as.factor(datos3$Brand)
datos3$Brand <- as.factor(datos3$Brand)
var_cuanti.3 <- subset(datos3,
select = c("Weight","Screen", "Battery", "Brand","Warranty", "Price"))
datos3 <- read.csv("datos.csv")
datos3 <- subset(datos, select = -Model)
datos3 <- read.csv("datos.csv")
View(datos3)
datos3 <- subset(datos3, select = -Model)
datos3$Screen <- as.factor(datos3$Sreen)
datos3$RAM <- as.factor(datos3$RAM)
datos3$Screen <- as.factor(datos3$Sreen)
datos3$Screen <- as.factor(datos3$Srceen)
datos3$Screen <- as.factor(datos3$Screen)
var_cuanti <- subset(datos,
select = c("Price","Weight", "Battery", "Screen","Brand", "Warranty"))
datos3$Brand <- as.factor(datos3$Brand)
datos3$Graphics<- as.factor(datos3$Graphics)
datos3$Operating<- as.factor(datos3$Operating)
datos3$Processor <- as.factor(datos3$Processor)
datos3$Storage <- as.factor(datos3$Storage)
datos3$Warranty <- as.factor(datos3$Warranty)
datos3$RAM <- as.factor(datos3$RAM)
datos3$Screen <- as.factor(datos3$Screen)
datos3 <- read.csv("datos.csv")
datos3 <- subset(datos3, select = -Model)
View(datos3)
datos3$Brand <- as.factor(datos3$Brand)
datos3$Graphics<- as.factor(datos3$Graphics)
datos3$Operating<- as.factor(datos3$Operating)
datos3$Processor <- as.factor(datos3$Processor)
datos3$Storage <- as.factor(datos3$Storage)
datos3$Warranty <- as.factor(datos3$Warranty)
datos3$RAM <- as.factor(datos3$RAM)
datos3$Screen <- as.factor(datos3$Screen)
var_cuanti <- subset(datos,
select = c("Price","Weight", "Battery", "Screen","Brand", "Warranty"))
var_cuanti.3 <- subset(datos,
select = c("Price","Weight", "Battery", "Screen","Brand", "Warranty"))
Modelo.3 <- lm(Price ~  Weight +Battery + Battery + Screen + Brand ,
data = var_cuanti.3)
summary(Modelo.3)
datos3$Screen <- as.factor(datos3$Screen)
var_cuanti.3 <- subset(datos,
select = c("Price","Weight", "Battery", "Screen","Brand", "Warranty"))
Modelo.3 <- lm(Price ~  Weight +Battery + Battery + Screen + Brand ,
data = var_cuanti.3)
summary(Modelo.3)
summary(Modelo.3)
str(datos3$Screen)
str(datos3$Screen)
summary(Modelo.3)
Modelo.3 <- lm(Price ~  Weight +Battery + Battery + Screen + Brand ,
data = var_cuanti.3)
summary(Modelo.3)
library(car)
vif(Modelo.3)
datos3$Residuales<- rstandard(Modelo.3)
shapiro.test(Modelo.3$residuals)
library(lmtest)
bptest(Modelo.3)
bgtest(Modelo.3)
dwtest(Modelo2.3)
dwtest(Modelo.3)
modF3 <- step(Modelo.3, trace = TRUE, direction = "backward")
summary(modF3)
sample3 <- sample.int(n = nrow(var_cuanti.3), size = floor(0.80*nrow(var_cuanti.3)), replace = F)
train3 <- var_cuanti.3[sample, ]
test3 <- var_cuanti.3[-sample, ]
metricas2 <- c(mae(test2$Price,prediccion2),
mape(test2$Price, prediccion2),
mse(test2$Price, prediccion2),
rmse(test2$Price, prediccion2),
AIC(modelotesting2),
BIC(modelotesting2),
summary(modelotesting2)$r.squared)
library(Metrics)
metricas2 <- c(mae(test2$Price,prediccion2),
mape(test2$Price, prediccion2),
mse(test2$Price, prediccion2),
rmse(test2$Price, prediccion2),
AIC(modelotesting2),
BIC(modelotesting2),
summary(modelotesting2)$r.squared)
modelotesting2 <- lm(formula = Price ~ . , data = test2)
prediccion2 <- predict.lm(modelotesting, data = test2)
metricas2 <- c(mae(test2$Price,prediccion2),
mape(test2$Price, prediccion2),
mse(test2$Price, prediccion2),
rmse(test2$Price, prediccion2),
AIC(modelotesting2),
BIC(modelotesting2),
summary(modelotesting2)$r.squared)
names(metricas2) <- c("MAE","MAPE","MSE","RMSE","AIC","BIC","R2")
metricas2
library(Metrics)
metricas3 <- c(mae(test3$Price,prediccion3),
mape(test3$Price, prediccion3),
mse(test3$Price, prediccion3),
rmse(test3$Price, prediccion3),
AIC(modelotesting3),
BIC(modelotesting3),
summary(modelotesting3)$r.squared)
prediccion3 <- predict.lm(modelotesting, data = test3)
metricas3 <- c(mae(test3$Price,prediccion3),
mape(test3$Price, prediccion3),
mse(test3$Price, prediccion3),
rmse(test3$Price, prediccion3),
AIC(modelotesting3),
BIC(modelotesting3),
summary(modelotesting3)$r.squared)
names(metricas3) <- c("MAE","MAPE","MSE","RMSE","AIC","BIC","R2")
modelotesting3 <- lm(formula = Price ~ . , data = test3)
prediccion3 <- predict.lm(modelotesting, data = test3)
prediccion3 <- predict.lm(modelotesting, data = test3)
library(Metrics)
metricas3 <- c(mae(test3$Price,prediccion3),
mape(test3$Price, prediccion3),
mse(test3$Price, prediccion3),
rmse(test3$Price, prediccion3),
AIC(modelotesting3),
BIC(modelotesting3),
summary(modelotesting3)$r.squared)
names(metricas3) <- c("MAE","MAPE","MSE","RMSE","AIC","BIC","R2")
metricas3
Modelo <- lm(Price ~  Weight + Screen +  Battery ,
data = var_cuanti)
summary(Modelo)
vif(Modelo)
Modelo1.0 <- lm(Price ~   Weight + Screen +  Battery ,
data = datos1)
datos1 <- var_cuanti[-outliers, ]
outliers <- c(14, 106, 192, 280, 518, 549, 634, 874, 907, 934,
950, 1109, 1128, 1130, 1171, 1221, 1222, 1317,
1335, 1380, 1405, 1449, 1466, 1631, 1682, 1792,
1827, 1921, 2000, 2103, 2141, 2169, 2343, 2349,
2371, 2451, 2477, 2541, 2543, 2577, 2626, 2632,
2652, 2657, 2713)
Modelo1.0 <- lm(Price ~   Weight + Screen +  Battery ,
data = datos1)
summary(Modelo1.0)
shapiro.test(Modelo1.0$residuals)
bptest(Modelo1.0)
bgtest(Modelo1.0)
dwtest(Modelo1.0)
set.seed(541)
sample <- sample.int(n = nrow(datosp), size = floor(0.80*nrow(datosp)), replace = F)
train <- datosp[sample, ]
test <- datosp[-sample, ]
modelotesting <- lm(formula = Price ~ . , data = test)
prediccion <- predict.lm(modelotesting, data = test)
library(Metrics)
metricas <- c(mae(test$Price,prediccion),
mape(test$Price, prediccion),
mse(test$Price, prediccion),
rmse(test$Price, prediccion),
AIC(modelotesting),
BIC(modelotesting),
summary(modelotesting)$r.squared)
names(metricas) <- c("MAE","MAPE","MSE","RMSE","AIC","BIC","R2")
metricas
Modelo.2 <- lm(Price ~  RAM + Storage +  Graphics + Processor ,
data = var_cuanti.2)
summary(Modelo.2)
vif(Modelo.2)
library(car)
vif(Modelo.2)
outliers <- c(14, 106, 192, 280, 518, 549, 634, 874, 907, 934,
950, 1109, 1128, 1130, 1171, 1221, 1222, 1317,
1335, 1380, 1405, 1449, 1466, 1631, 1682, 1792,
1827, 1921, 2000, 2103, 2141, 2169, 2343, 2349,
2371, 2451, 2477, 2541, 2543, 2577, 2626, 2632,
2652, 2657, 2713)
datos3 <- var_cuanti.2[-outliers, ]
Modelo2.0 <- lm(Price ~  RAM + Storage +  Graphics + Processor,
data = datos3)
summary(Modelo2.0)
datos3$Residuales<- rstandard(Modelo1.0)
shapiro.test(Modelo2.0$residuals)
bptest(Modelo2.0)
bgtest(Modelo2.0)
dwtest(Modelo2.0)
modF2 <- step(Modelo2.0, trace = TRUE, direction = "backward")
summary(modF2)
set.seed(541)
sample2 <- sample.int(n = nrow(var_cuanti.2), size = floor(0.80*nrow(var_cuanti.2)), replace = F)
train2 <- var_cuanti.2[sample, ]
test2 <- var_cuanti.2[-sample, ]
modelotesting2 <- lm(formula = Price ~ . , data = test2)
prediccion2 <- predict.lm(modelotesting, data = test2)
library(Metrics)
metricas2 <- c(mae(test2$Price,prediccion2),
mape(test2$Price, prediccion2),
mse(test2$Price, prediccion2),
rmse(test2$Price, prediccion2),
AIC(modelotesting2),
BIC(modelotesting2),
summary(modelotesting2)$r.squared)
names(metricas2) <- c("MAE","MAPE","MSE","RMSE","AIC","BIC","R2")
Modelo.3 <- lm(Price ~  Weight +Battery + Battery + Screen + Brand + Warranty ,
data = var_cuanti.3)
summary(Modelo.3)
library(car)
vif(Modelo.3)
datos3$Residuales<- rstandard(Modelo.3)
shapiro.test(Modelo.3$residuals)
datos3$Residuales<- rstandard(Modelo.3)
View(datos3)
shapiro.test(Modelo.3$residuals)
library(lmtest)
bptest(Modelo.3)
bgtest(Modelo.3)
dwtest(Modelo.3)
modF3 <- step(Modelo.3, trace = TRUE, direction = "backward")
summary(modF3)
set.seed(123)
sample3 <- sample.int(n = nrow(var_cuanti.3), size = floor(0.80*nrow(var_cuanti.3)), replace = F)
train3 <- var_cuanti.3[sample, ]
test3 <- var_cuanti.3[-sample, ]
modelotesting3 <- lm(formula = Price ~ . , data = test3)
prediccion3 <- predict.lm(modelotesting, data = test3)
library(Metrics)
metricas3 <- c(mae(test3$Price,prediccion3),
mape(test3$Price, prediccion3),
mse(test3$Price, prediccion3),
rmse(test3$Price, prediccion3),
AIC(modelotesting3),
BIC(modelotesting3),
summary(modelotesting3)$r.squared)
names(metricas3) <- c("MAE","MAPE","MSE","RMSE","AIC","BIC","R2")
quarto publish quarto-pub
quarto publish quarto-pub
quarto::quarto_connect("quartopub")
quarto::quarto_connect("quartopub")
